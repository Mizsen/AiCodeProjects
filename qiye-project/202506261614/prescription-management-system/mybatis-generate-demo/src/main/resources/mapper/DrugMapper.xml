<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.prescription.mapper.DrugMapper">
  <resultMap id="BaseResultMap" type="com.example.prescription.entity.Drug">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="drug_name" jdbcType="VARCHAR" property="drugName" />
    <result column="specification" jdbcType="VARCHAR" property="specification" />
    <result column="manufacturer" jdbcType="VARCHAR" property="manufacturer" />
    <result column="indications" jdbcType="VARCHAR" property="indications" />
    <result column="created_time" jdbcType="VARCHAR" property="createdTime" />
    <result column="created_by" jdbcType="INTEGER" property="createdBy" />
    <result column="updated_time" jdbcType="VARCHAR" property="updatedTime" />
    <result column="updated_by" jdbcType="INTEGER" property="updatedBy" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, drug_name, specification, manufacturer, indications, created_time, created_by, 
    updated_time, updated_by
  </sql>
  <select id="selectByExample" parameterType="com.example.prescription.entity.DrugExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from drug
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from drug
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from drug
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.prescription.entity.DrugExample">
    delete from drug
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.example.prescription.entity.Drug">
    insert into drug (id, drug_name, specification, 
      manufacturer, indications, created_time, 
      created_by, updated_time, updated_by
      )
    values (#{id,jdbcType=INTEGER}, #{drugName,jdbcType=VARCHAR}, #{specification,jdbcType=VARCHAR}, 
      #{manufacturer,jdbcType=VARCHAR}, #{indications,jdbcType=VARCHAR}, #{createdTime,jdbcType=VARCHAR}, 
      #{createdBy,jdbcType=INTEGER}, #{updatedTime,jdbcType=VARCHAR}, #{updatedBy,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.prescription.entity.Drug">
    insert into drug
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="drugName != null">
        drug_name,
      </if>
      <if test="specification != null">
        specification,
      </if>
      <if test="manufacturer != null">
        manufacturer,
      </if>
      <if test="indications != null">
        indications,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="updatedTime != null">
        updated_time,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="drugName != null">
        #{drugName,jdbcType=VARCHAR},
      </if>
      <if test="specification != null">
        #{specification,jdbcType=VARCHAR},
      </if>
      <if test="manufacturer != null">
        #{manufacturer,jdbcType=VARCHAR},
      </if>
      <if test="indications != null">
        #{indications,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="updatedTime != null">
        #{updatedTime,jdbcType=VARCHAR},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.prescription.entity.DrugExample" resultType="java.lang.Long">
    select count(*) from drug
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update drug
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=INTEGER},
      </if>
      <if test="row.drugName != null">
        drug_name = #{row.drugName,jdbcType=VARCHAR},
      </if>
      <if test="row.specification != null">
        specification = #{row.specification,jdbcType=VARCHAR},
      </if>
      <if test="row.manufacturer != null">
        manufacturer = #{row.manufacturer,jdbcType=VARCHAR},
      </if>
      <if test="row.indications != null">
        indications = #{row.indications,jdbcType=VARCHAR},
      </if>
      <if test="row.createdTime != null">
        created_time = #{row.createdTime,jdbcType=VARCHAR},
      </if>
      <if test="row.createdBy != null">
        created_by = #{row.createdBy,jdbcType=INTEGER},
      </if>
      <if test="row.updatedTime != null">
        updated_time = #{row.updatedTime,jdbcType=VARCHAR},
      </if>
      <if test="row.updatedBy != null">
        updated_by = #{row.updatedBy,jdbcType=INTEGER},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update drug
    set id = #{row.id,jdbcType=INTEGER},
      drug_name = #{row.drugName,jdbcType=VARCHAR},
      specification = #{row.specification,jdbcType=VARCHAR},
      manufacturer = #{row.manufacturer,jdbcType=VARCHAR},
      indications = #{row.indications,jdbcType=VARCHAR},
      created_time = #{row.createdTime,jdbcType=VARCHAR},
      created_by = #{row.createdBy,jdbcType=INTEGER},
      updated_time = #{row.updatedTime,jdbcType=VARCHAR},
      updated_by = #{row.updatedBy,jdbcType=INTEGER}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.prescription.entity.Drug">
    update drug
    <set>
      <if test="drugName != null">
        drug_name = #{drugName,jdbcType=VARCHAR},
      </if>
      <if test="specification != null">
        specification = #{specification,jdbcType=VARCHAR},
      </if>
      <if test="manufacturer != null">
        manufacturer = #{manufacturer,jdbcType=VARCHAR},
      </if>
      <if test="indications != null">
        indications = #{indications,jdbcType=VARCHAR},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="updatedTime != null">
        updated_time = #{updatedTime,jdbcType=VARCHAR},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.prescription.entity.Drug">
    update drug
    set drug_name = #{drugName,jdbcType=VARCHAR},
      specification = #{specification,jdbcType=VARCHAR},
      manufacturer = #{manufacturer,jdbcType=VARCHAR},
      indications = #{indications,jdbcType=VARCHAR},
      created_time = #{createdTime,jdbcType=VARCHAR},
      created_by = #{createdBy,jdbcType=INTEGER},
      updated_time = #{updatedTime,jdbcType=VARCHAR},
      updated_by = #{updatedBy,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>